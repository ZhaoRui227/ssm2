/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-06-07 07:02:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

    pageContext.setAttribute("APP_PATH",request.getContextPath());

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap-3.4.1-dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/js/jquery-3.3.1.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/static/bootstrap-3.4.1-dist/js/bootstrap.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <title>员工列表页面</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"modal fade\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n");
      out.write("    <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("                <div class=\"modal-header\">\r\n");
      out.write("                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n");
      out.write("                    <h4 class=\"modal-title\" id=\"myModalLabel\">员工添加</h4>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"modal-body\">\r\n");
      out.write("                    <form class=\"form-horizontal\" id=\"addempform\">\r\n");
      out.write("                        <div class=\"form-group\">\r\n");
      out.write("                                <label for=\"inputempNAme\" class=\"col-sm-2 control-label\">empName</label>\r\n");
      out.write("                            <div class=\"col-sm-10\">\r\n");
      out.write("                                <input type=\"text\" class=\"form-control\"  name=\"empName\" id=\"inputempNAme\" placeholder=\"empName\">\r\n");
      out.write("                                <span id=\"empNamehelp\" class=\"help-block\"></span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-group\">\r\n");
      out.write("                            <label for=\"inputEmail\" class=\"col-sm-2 control-label\">Email</label>\r\n");
      out.write("                            <div class=\"col-sm-10\">\r\n");
      out.write("                                <input type=\"email\" class=\"form-control\"  name=\"email\" id=\"inputEmail\" placeholder=\"Email\">\r\n");
      out.write("                                <span id=\"emailhelp\" class=\"help-block\"></span>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-group\">\r\n");
      out.write("                            <label class=\"col-sm-2 control-label\">gender</label>\r\n");
      out.write("                            <div class=\"col-sm-10\">\r\n");
      out.write("                                <label class=\"radio-inline\">\r\n");
      out.write("                                    <input type=\"radio\" name=\"gender\" id=\"gender01\" value=\"M\" checked> 男\r\n");
      out.write("                                </label>\r\n");
      out.write("                                <label class=\"radio-inline\">\r\n");
      out.write("                                    <input type=\"radio\" name=\"gender\" id=\"gender02\" value=\"F\"> 女\r\n");
      out.write("                                </label>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"form-group\">\r\n");
      out.write("                            <label class=\"col-sm-2 control-label\">department</label>\r\n");
      out.write("                            <div class=\"col-sm-4\">\r\n");
      out.write("                                <select class=\"form-control\" name=\"dId\"  id=\"selectdept\">\r\n");
      out.write("\r\n");
      out.write("                                </select>\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </form>\r\n");
      out.write("                </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" id=\"empSave\">保存</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"modal fade\" id=\"myeditModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n");
      out.write("    <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <div class=\"modal-header\">\r\n");
      out.write("                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n");
      out.write("                <h4 class=\"modal-title\" >员工修改</h4>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body\">\r\n");
      out.write("                <form class=\"form-horizontal\" id=\"editempform\">\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"inputempNAme\" class=\"col-sm-2 control-label\">empName</label>\r\n");
      out.write("                        <div class=\"col-sm-10\">\r\n");
      out.write("                            <p  class=\"form-control-static\"  id=\"editempNAme\" ></p>\r\n");
      out.write("                            <span id=\"deitNamehelp\" class=\"help-block\"></span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"inputEmail\" class=\"col-sm-2 control-label\">Email</label>\r\n");
      out.write("                        <div class=\"col-sm-10\">\r\n");
      out.write("                            <input type=\"email\" class=\"form-control\"  name=\"email\" id=\"editEmail\" placeholder=\"Email\">\r\n");
      out.write("                            <span id=\"edithelp\" class=\"help-block\"></span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">gender</label>\r\n");
      out.write("                        <div class=\"col-sm-10\">\r\n");
      out.write("                            <label class=\"radio-inline\">\r\n");
      out.write("                                <input type=\"radio\" name=\"gender\" id=\"gender03\" value=\"M\" checked> 男\r\n");
      out.write("                            </label>\r\n");
      out.write("                            <label class=\"radio-inline\">\r\n");
      out.write("                                <input type=\"radio\" name=\"gender\" id=\"gender04\" value=\"F\"> 女\r\n");
      out.write("                            </label>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label class=\"col-sm-2 control-label\">department</label>\r\n");
      out.write("                        <div class=\"col-sm-4\">\r\n");
      out.write("                            <select class=\"form-control\" name=\"dId\"  id=\"editselectdept\">\r\n");
      out.write("\r\n");
      out.write("                            </select>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </form>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-footer\">\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">关闭</button>\r\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" id=\"empedit\">修改</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\">\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-md-12\">\r\n");
      out.write("            <h1>SSM-CRUD</h1>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-md-offset-9\">\r\n");
      out.write("            <button class=\"btn btn-primary\" id=\"newEmployee\">新增</button>\r\n");
      out.write("            <button class=\"btn btn-danger\" id=\"deleteAll\">删除</button>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-md-12\">\r\n");
      out.write("            <table class=\"table table-hover\" id=\"table\">\r\n");
      out.write("                <thead>\r\n");
      out.write("                <tr>\r\n");
      out.write("                    <th>\r\n");
      out.write("                        <input type=\"checkbox\" id=\"checkAll\">\r\n");
      out.write("                    </th>\r\n");
      out.write("                    <th>#</th>\r\n");
      out.write("                    <th>empName</th>\r\n");
      out.write("                    <th>gender</th>\r\n");
      out.write("                    <th>email</th>\r\n");
      out.write("                    <th>depName</th>\r\n");
      out.write("                    <th>操作</th>\r\n");
      out.write("                </tr>\r\n");
      out.write("                </thead>\r\n");
      out.write("                <tbody >\r\n");
      out.write("\r\n");
      out.write("                </tbody>\r\n");
      out.write("\r\n");
      out.write("            </table>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("    <div class=\"row\">\r\n");
      out.write("        <div class=\"col-md-4\">\r\n");
      out.write("            <span id=\"table_info\">\r\n");
      out.write("\r\n");
      out.write("            </span>\r\n");
      out.write("            <div class=\"col-sm-3\">\r\n");
      out.write("                <div class=\"input-group\">\r\n");
      out.write("                    <input type=\"text\" class=\"input-sm\"   id=\"topagenum\"  placeholder=\"跳转到\">\r\n");
      out.write("                    <div class=\"input-group-btn\">\r\n");
      out.write("                        <button type=\"submit\" class=\"btn btn-default btn-sm \" id=\"topagebt\">GO!</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <div class=\"col-md-8\">\r\n");
      out.write("            <nav aria-label=\"Page navigation\" id=\"nav\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            </nav>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("    //保存标志位\r\n");
      out.write("     var saveflagempName=false;\r\n");
      out.write("    var saveflagemail=false;\r\n");
      out.write("    //更新标志位\r\n");
      out.write("    var updateflagemail = false;\r\n");
      out.write("    //当前页面\r\n");
      out.write("    var  current = 1;\r\n");
      out.write("    //200默认是已被占用 100是未被占用\r\n");
      out.write("    var code;\r\n");
      out.write("\r\n");
      out.write("    //入口函数\r\n");
      out.write("   $(function() {\r\n");
      out.write("       //去首页的第一页\r\n");
      out.write("       topage(1);\r\n");
      out.write("   });\r\n");
      out.write("\r\n");
      out.write("   //抽取出来的ajax请求\r\n");
      out.write("   function  topage(pn){\r\n");
      out.write("        //先把一些状态给清空\r\n");
      out.write("       //先把全选按钮选中状态取消\r\n");
      out.write("       $(\"#checkAll\").prop(\"checked\",false);\r\n");
      out.write("\r\n");
      out.write("       $.ajax({\r\n");
      out.write("            url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emps\",\r\n");
      out.write("            data:\"pn=\"+pn,\r\n");
      out.write("            type:\"GET\",\r\n");
      out.write("            success:function(result) {\r\n");
      out.write("                //当前页\r\n");
      out.write("                current=result.extend.pageInfo.pageNum;\r\n");
      out.write("              /*console.log(result);*/\r\n");
      out.write("                //解析并显示员工数据\r\n");
      out.write("                build_emps_teble(result);\r\n");
      out.write("                //解析并显示分页信息\r\n");
      out.write("                build_page_info(result);\r\n");
      out.write("                //显示分页条数据\r\n");
      out.write("                build_page_nave(result);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("   //tbody显示信息\r\n");
      out.write("   function build_emps_teble(result){\r\n");
      out.write("       //先进行清空上一次的数据\r\n");
      out.write("       $(\"#table tbody\").empty();\r\n");
      out.write("        var emps = result.extend.pageInfo.list;\r\n");
      out.write("        $.each(emps,function (index,item){\r\n");
      out.write("\r\n");
      out.write("            /*我发现在给写部门为空的话会显示错误  然后一页五个都会不显示  这个可能会被找出破绽  这个需要解决  有地段为空的话就会\r\n");
      out.write("             所以可以判断一下是否为空*/\r\n");
      out.write("\r\n");
      out.write("            var checkbox = $(\"<td><input type='checkbox' class='check_item'/></td>\")\r\n");
      out.write("            var empId  = $(\"<td></td>\").append(item.empId);\r\n");
      out.write("            var empName =$(\"<td></td>\").append(item.empName);\r\n");
      out.write("            var gender  = $(\"<td></td>\").append(item.gender==\"M\"?\"男\":\"女\");\r\n");
      out.write("            var email =  $(\"<td></td>\").append(item.email);\r\n");
      out.write("            var deptName = $(\"<td></td>\").append(item.department.deptName);\r\n");
      out.write("            var editbutton = $(\"<button></button>\").addClass(\"btn btn-primary btn-sm edit_btn\").append($(\"<span></span>\").addClass(\"glyphicon glyphicon-pencil\")).append(\" \").append(\"修改\").attr(\"edit_id\",item.empId);  //修改按钮上绑定的id的值是用来获取员工信息和提交员工信息\r\n");
      out.write("            var deletebutton = $(\"<button></button>\").addClass(\"btn btn-danger btn-sm delete_bt\").append($(\"<span></span>\").addClass(\"glyphicon glyphicon-trash\")).append(\" \").append(\"删除\").attr(\"dele_id\",item.empId);\r\n");
      out.write("            var button = $(\"<td></td>\").append(editbutton).append(\" \").append(deletebutton);\r\n");
      out.write("//           qppend方法执行完成之后还是返回原来的元素\r\n");
      out.write("            $(\"<tr></tr>\").append(checkbox).append(empId).append(empName).append(gender).append(email).append(deptName).append(button).appendTo(\"#table tbody\");\r\n");
      out.write("\r\n");
      out.write("        });\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("   //显示页数信息\r\n");
      out.write("   function  build_page_info(result){\r\n");
      out.write("       //先把上个页面的信息清空\r\n");
      out.write("       $(\"#table_info\").empty();\r\n");
      out.write("       $(\"#table_info\").append(\"当前第\"+result.extend.pageInfo.pageNum+\"页,共\"+result.extend.pageInfo.pages+\"页,共\"+result.extend.pageInfo.total+\"条数据\").attr(\"pages\",result.extend.pageInfo.pages);\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("   //分页栏跳转\r\n");
      out.write("   function build_page_nave(result){\r\n");
      out.write("        $(\"#nav\").empty();\r\n");
      out.write("       var ul =$(\"<ul></ul>\").addClass(\"pagination\");\r\n");
      out.write("       var  firstpageLi = $(\"<li></li>\").append($(\"<a></a>\").attr(\"href\",\"#\").append(\"<span></span>\").append(\"首页\"));\r\n");
      out.write("       var  prepageLi = $(\"<li></li>\").append($(\"<a></a>\").attr(\"href\",\"#\").append(\"<span></span>\").append(\"&laquo;\"));\r\n");
      out.write("\r\n");
      out.write("       if(result.extend.pageInfo.hasPreviousPage==false){\r\n");
      out.write("           firstpageLi.addClass(\"disabled\");\r\n");
      out.write("           prepageLi.addClass(\"disabled\");\r\n");
      out.write("       }else{\r\n");
      out.write("           //设置上一页下一页的请求\r\n");
      out.write("              firstpageLi.click(function (){ topage(1)});\r\n");
      out.write("              prepageLi.click(function (){ topage(result.extend.pageInfo.prePage)});\r\n");
      out.write("       }\r\n");
      out.write("       ul.append(firstpageLi).append(prepageLi);\r\n");
      out.write("       $.each(result.extend.pageInfo.navigatepageNums,function (index,item){\r\n");
      out.write("\r\n");
      out.write("           if (item==result.extend.pageInfo.pageNum){\r\n");
      out.write("               var li  = $(\"<li></li>\").append($(\"<a></a>\").attr(\"href\",\"#\").append(item)).addClass(\"active\");\r\n");
      out.write("           }else{\r\n");
      out.write("               var li  = $(\"<li></li>\").append($(\"<a></a>\").attr(\"href\",\"#\").append(item));\r\n");
      out.write("           }\r\n");
      out.write("           //发送去哪一页的ajax请求\r\n");
      out.write("           li.click(function (){\r\n");
      out.write("               topage(item);\r\n");
      out.write("           })\r\n");
      out.write("           ul.append(li);\r\n");
      out.write("       })\r\n");
      out.write("       var  nextpageLi = $(\"<li></li>\").append($(\"<a></a>\").attr(\"href\",\"#\").append(\"<span></span>\").append(\"&raquo;\"));\r\n");
      out.write("       var  lastpageLi = $(\"<li></li>\").append($(\"<a></a>\").attr(\"href\",\"#\").append(\"<span></span>\").append(\"尾页\"));\r\n");
      out.write("       if(result.extend.pageInfo.hasNextPage==false){\r\n");
      out.write("           nextpageLi.addClass(\"disabled\");\r\n");
      out.write("           lastpageLi.addClass(\"disabled\");\r\n");
      out.write("       }else{\r\n");
      out.write("            //设置首页尾页的请求\r\n");
      out.write("           nextpageLi.click(function (){ topage(result.extend.pageInfo.nextPage)});\r\n");
      out.write("           lastpageLi.click(function (){ topage(result.extend.pageInfo.pages)});\r\n");
      out.write("       }\r\n");
      out.write("       ul.append(nextpageLi).append(lastpageLi).appendTo($(\"#nav\"));\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("   //新建employee点击\r\n");
      out.write("   $(\"#newEmployee\").click(function (){\r\n");
      out.write("\r\n");
      out.write("       //先把上一次在表单里的数据清除\r\n");
      out.write("       $(\"#myModal form\")[0].reset();\r\n");
      out.write("       //弹出模态框之前先把部门信息获取出来 每次弹窗之前都要获取一次   传入模态窗的的部门id\r\n");
      out.write("       getdept($(\"#selectdept\"));\r\n");
      out.write("       $(\"#myModal\").modal({\r\n");
      out.write("           backdrop:\"static\"\r\n");
      out.write("       })\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("       //先把上一次校验的提示信息或者效果清空\r\n");
      out.write("       $(\"#inputempNAme\").parent().removeClass(\"has-error has-success\");\r\n");
      out.write("       $(\"#empNamehelp\").empty();\r\n");
      out.write("       $(\"#inputEmail\").parent().removeClass(\"has-error has-success\");\r\n");
      out.write("       $(\"#emailhelp\").empty();\r\n");
      out.write("\r\n");
      out.write("   })\r\n");
      out.write("\r\n");
      out.write("    //获取部门信息\r\n");
      out.write("    function getdept(ele){\r\n");
      out.write("\r\n");
      out.write("       //先清空控件的数据\r\n");
      out.write("       ele.empty();\r\n");
      out.write("\r\n");
      out.write("       $.ajax({\r\n");
      out.write("          url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/depts\",\r\n");
      out.write("           type: \"GET\",\r\n");
      out.write("           success:function (result){\r\n");
      out.write("               $(\"#selectdept\").empty();\r\n");
      out.write("              $.each(result.extend.depts,function (){\r\n");
      out.write("\r\n");
      out.write("                  var deptid  = $(\"<option></option>\").attr(\"value\",this.deptId).append(this.deptName);\r\n");
      out.write("                  ele.append(deptid);\r\n");
      out.write("              })\r\n");
      out.write("\r\n");
      out.write("              /*{\"code\":100,\"msg\":\"处理成功\",\"extend\":{\"depts\":[{\"deptId\":1,\"deptName\":\"开发部\"},{\"deptId\":2,\"deptName\":\"测试部\"}]}}*/\r\n");
      out.write("           }\r\n");
      out.write("       });\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //保存新建用户信息\r\n");
      out.write("    $(\"#empSave\").click(function (){\r\n");
      out.write("        //在保存员工信息之前首先进行数据校验  应该是在离焦校验  而不应该在这里校验 saveflagemail和saveflagempName是前端校验成功标志位\r\n");
      out.write("            if (saveflagempName && saveflagemail){\r\n");
      out.write("                //发送post请求\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp\",\r\n");
      out.write("                    type:\"POST\",\r\n");
      out.write("                    data:$(\"#addempform\").serializeArray(),\r\n");
      out.write("                    success:function (result){\r\n");
      out.write("                        //先判断返回状态码是否是成功 因为加入了后端校验   所以耦合度有点高  前端校验是使用的离焦自动检测  后端使用离焦对服务器的负荷就有点大\r\n");
      out.write("                        if (result.code==100){\r\n");
      out.write("                            //先关闭这个弹窗\r\n");
      out.write("                            $('#myModal').modal('hide')\r\n");
      out.write("                            //再直接跳转到最后一页  直接写死是最后一页\r\n");
      out.write("                            topage(999999);\r\n");
      out.write("                        }else{\r\n");
      out.write("                            //显示后端返回的错误信息  其实应该和前端校验信息抽取出来合在一起的\r\n");
      out.write("                            showError(result);\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            }else{\r\n");
      out.write("                return false;\r\n");
      out.write("            }\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    //检查用户名是否可用\r\n");
      out.write("\r\n");
      out.write("    function  checkuser(username){\r\n");
      out.write("\r\n");
      out.write("       $.ajax({\r\n");
      out.write("          url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/checkuser\",\r\n");
      out.write("           type:\"get\",\r\n");
      out.write("           data:\"empName=\"+username,\r\n");
      out.write("           success:function (result){\r\n");
      out.write("              code  = result.code;\r\n");
      out.write("           }\r\n");
      out.write("       });\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    //显示后端返回的错误信息\r\n");
      out.write("    function  showError(result){\r\n");
      out.write("        //先把上一次校验的提示信息或者效果清空\r\n");
      out.write("        $(\"#inputempNAme\").parent().removeClass(\"has-error has-success\");\r\n");
      out.write("        $(\"#empNamehelp\").empty();\r\n");
      out.write("        $(\"#inputEmail\").parent().removeClass(\"has-error has-success\");\r\n");
      out.write("        $(\"#emailhelp\").empty();\r\n");
      out.write("\r\n");
      out.write("        //用户经过了前端的校验数据到达后端是不通过的   显示失败信息  这个验证信息防小人 肯定是搭配前端用\r\n");
      out.write("        if (result.extend.errorFileds.empName!=undefined){\r\n");
      out.write("            //显示empname的错误信息\r\n");
      out.write("            $(\"#inputempNAme\").parent().addClass(\"has-error\");\r\n");
      out.write("            $(\"#empNamehelp\").append(\"用户名可以是2-5位中文或者6-16位英文的组合\");\r\n");
      out.write("        }\r\n");
      out.write("        if (result.extend.errorFileds.email!=undefined){\r\n");
      out.write("            //显示email的错误信息\r\n");
      out.write("            $(\"#inputEmail\").parent().addClass(\"has-error\");\r\n");
      out.write("            $(\"#emailhelp\").append(\"不符合邮箱规范\");\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    //离焦进行校验empname  保存\r\n");
      out.write("    $(\"#inputempNAme\").blur(function (){\r\n");
      out.write("\r\n");
      out.write("        //先把上一次校验的提示信息或者效果清空\r\n");
      out.write("        $(\"#inputempNAme\").parent().removeClass(\"has-error has-success\");\r\n");
      out.write("        $(\"#empNamehelp\").empty();\r\n");
      out.write("        //拿到需要校验的数据  使用正则表达式进行校验\r\n");
      out.write("        var empName= $(\"#inputempNAme\").val();\r\n");
      out.write("        var regName = /(^[a-zA-Z0-9_-]{6,16}$)|(^[\\u2E80-\\u9FFF]{2,5})/;\r\n");
      out.write("        if(!regName.test(empName)){\r\n");
      out.write("            $(\"#inputempNAme\").parent().addClass(\"has-error\");\r\n");
      out.write("            $(\"#empNamehelp\").append(\"用户名可以是2-5位中文或者6-16位英文的组合\");\r\n");
      out.write("            saveflagempName=false;\r\n");
      out.write("            return false;\r\n");
      out.write("        } else{\r\n");
      out.write("\r\n");
      out.write("            //检查用户名是否可用\r\n");
      out.write("            checkuser(empName);\r\n");
      out.write("            if(code != 100){\r\n");
      out.write("                $(\"#inputempNAme\").parent().addClass(\"has-error\");\r\n");
      out.write("                $(\"#empNamehelp\").append(\"用户名已被占用\");\r\n");
      out.write("\r\n");
      out.write("                saveflagempName=false;\r\n");
      out.write("                return false;\r\n");
      out.write("            }else{\r\n");
      out.write("            $(\"#inputempNAme\").parent().addClass(\"has-success\");\r\n");
      out.write("            $(\"#empNamehelp\").append(\"姓名可用\");\r\n");
      out.write("\r\n");
      out.write("            saveflagempName=true;\r\n");
      out.write("            return  true;\r\n");
      out.write("            }\r\n");
      out.write("        };\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //离焦进行校验email  保存\r\n");
      out.write("    $(\"#inputEmail\").blur(function (){\r\n");
      out.write("\r\n");
      out.write("        //先把上一次校验的提示信息或者效果清空\r\n");
      out.write("        $(\"#inputEmail\").parent().removeClass(\"has-error has-success\");\r\n");
      out.write("        $(\"#emailhelp\").empty();\r\n");
      out.write("\r\n");
      out.write("        //校验邮箱\r\n");
      out.write("        var email  = $(\"#inputEmail\").val();\r\n");
      out.write("        var regemail= /^[a-z\\d]+(\\.[a-z\\d]+)*@([\\da-z](-[\\da-z])?)+(\\.{1,2}[a-z]+)+$/;\r\n");
      out.write("        if(!regemail.test(email)){\r\n");
      out.write("            $(\"#inputEmail\").parent().addClass(\"has-error\");\r\n");
      out.write("            $(\"#emailhelp\").append(\"不符合邮箱规范\");\r\n");
      out.write("            saveflagemail=false;\r\n");
      out.write("            return  false;\r\n");
      out.write("        }else{\r\n");
      out.write("            $(\"#inputEmail\").parent().addClass(\"has-success\");\r\n");
      out.write("            $(\"#emailhelp\").append(\"符合邮箱规范\");\r\n");
      out.write("            saveflagemail=true;\r\n");
      out.write("            return  true;\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //离焦进行校验email  更新\r\n");
      out.write("    $(\"#editEmail\").blur(function (){\r\n");
      out.write("\r\n");
      out.write("        //先把上一次校验的提示信息或者效果清空\r\n");
      out.write("        $(\"#editEmail\").parent().removeClass(\"has-error has-success\");\r\n");
      out.write("        $(\"#edithelp\").empty();\r\n");
      out.write("\r\n");
      out.write("        //校验邮箱\r\n");
      out.write("        var email  = $(\"#editEmail\").val();\r\n");
      out.write("        var regemail= /^[a-z\\d]+(\\.[a-z\\d]+)*@([\\da-z](-[\\da-z])?)+(\\.{1,2}[a-z]+)+$/;\r\n");
      out.write("        if(!regemail.test(email)){\r\n");
      out.write("            $(\"#editEmail\").parent().addClass(\"has-error\");\r\n");
      out.write("            $(\"#edithelp\").append(\"不符合邮箱规范\");\r\n");
      out.write("            updateflagemail=false;\r\n");
      out.write("            return  false;\r\n");
      out.write("        }else{\r\n");
      out.write("            $(\"#editEmail\").parent().addClass(\"has-success\");\r\n");
      out.write("            $(\"#edithelp\").append(\"符合邮箱规范\");\r\n");
      out.write("            updateflagemail=true;\r\n");
      out.write("            return  true;\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //弹出修改模态框\r\n");
      out.write("    $(document).on(\"click\",\".edit_btn\",function (){\r\n");
      out.write("\r\n");
      out.write("        //先把上次的模态框错误提示信息清空\r\n");
      out.write("        $(\"#editEmail\").parent().removeClass(\"has-error has-success\");\r\n");
      out.write("        $(\"#edithelp\").empty();\r\n");
      out.write("        //查出部门信息 并绑定到修改模态窗的部门选择器上\r\n");
      out.write("        getdept($(\"#editselectdept\"));\r\n");
      out.write("        //先查出员工信息   获取员工id我们可以给修改按钮绑上一个自定义的属性  属性里面是id值\r\n");
      out.write("        getEmp($(this).attr(\"edit_id\"));\r\n");
      out.write("        //把员工的id传递给模态框的更新按钮\r\n");
      out.write("        $(\"#empedit\").attr(\"edit_id\",$(this).attr(\"edit_id\"));\r\n");
      out.write("\r\n");
      out.write("        $(\"#myeditModal\").modal({\r\n");
      out.write("            backdrop:\"static\"\r\n");
      out.write("        });\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    //查员工信息\r\n");
      out.write("    function  getEmp(id){\r\n");
      out.write("        $.ajax({\r\n");
      out.write("            url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp/\"+id,\r\n");
      out.write("            type:\"GET\",\r\n");
      out.write("            success:function (result){\r\n");
      out.write("\r\n");
      out.write("                //回显信息\r\n");
      out.write("                var emp =  result.extend.emp;\r\n");
      out.write("                $(\"#editempNAme\").text(emp.empName);\r\n");
      out.write("                $(\"#editEmail\").val(emp.email);\r\n");
      out.write("                $(\"#myeditModal input[name=gender]\").val([emp.gender]);\r\n");
      out.write("                $(\"#myeditModal select\").val([emp.dId]);\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    //点击更新 更新员工信息\r\n");
      out.write("    $(\"#empedit\").click(function (){\r\n");
      out.write("        //离焦判断是否符合邮箱规范再进行发送请求\r\n");
      out.write("       if(updateflagemail){\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp/\"+$(this).attr(\"edit_id\"),\r\n");
      out.write("                type:\"PUT\",\r\n");
      out.write("                data:$(\"#editempform\").serialize(),\r\n");
      out.write("                success:function(result){\r\n");
      out.write("                    if (result.code == 100){\r\n");
      out.write("                        //关闭模态框\r\n");
      out.write("                        $(\"#myeditModal\").modal('hide');\r\n");
      out.write("                        //成功以后先跳转到指定的页面\r\n");
      out.write("                        topage(current);\r\n");
      out.write("                    }else {\r\n");
      out.write("                        alert(\"修改失败哦！！！\");\r\n");
      out.write("                    }\r\n");
      out.write("                    }\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("       }else{\r\n");
      out.write("           return false;\r\n");
      out.write("       }\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    //发送删除请求\r\n");
      out.write("    $(document).on(\"click\",\".delete_bt\",function (){\r\n");
      out.write("        //弹出是否确认删除对话框\r\n");
      out.write("        var empname   = $(this).parents(\"tr\").find(\"td:eq(2)\").text();\r\n");
      out.write("        if (confirm(\"确认删除【\"+empname+\"】吗？\")){\r\n");
      out.write("            //确认，发送ajax请求删除即可\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp/\"+$(this).attr(\"dele_id\"),\r\n");
      out.write("                type:\"DELETE\",\r\n");
      out.write("                success:function (result){\r\n");
      out.write("\r\n");
      out.write("                    //跳转到当前页面\r\n");
      out.write("                    topage(current);\r\n");
      out.write("                }\r\n");
      out.write("            })\r\n");
      out.write("        }\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    //全选全不选\r\n");
      out.write("    $(\"#checkAll\").click(function (){\r\n");
      out.write("        //属性为check_item的选中属性的值就是id为checkAll是否选中的值\r\n");
      out.write("        $(\".check_item\").prop(\"checked\",$(this).prop(\"checked\"));\r\n");
      out.write("\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    //给所有的单选框绑定事件\r\n");
      out.write("    $(document).on(\"click\",\".check_item\",function (){\r\n");
      out.write("        $(\"#checkAll\")\r\n");
      out.write("        //判断当前选中的值是不是页面上有的单选框的个数\r\n");
      out.write("       var checkedflag   = $(\".check_item:checked\").length==$(\".check_item\").length;\r\n");
      out.write("       $(\"#checkAll\").prop(\"checked\",checkedflag);\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    //全选点击事件\r\n");
      out.write("     $(\"#deleteAll\").click(function (){\r\n");
      out.write("         var empNames=\"\";\r\n");
      out.write("         var del_ids = \"\";\r\n");
      out.write("         $.each($(\".check_item:checked\"),function (){\r\n");
      out.write("          empNames += $(this).parents(\"tr\").find(\"td:eq(2)\").text()+\",\";\r\n");
      out.write("          del_ids += $(this).parents(\"tr\").find(\"td:eq(1)\").text()+\"-\";\r\n");
      out.write("         })\r\n");
      out.write("         empNames.substring(0,empNames.length-1);\r\n");
      out.write("         del_ids.substring(0,del_ids.length-1);\r\n");
      out.write("         if (confirm(\"确认删除【\"+empNames+\"】吗？\")){\r\n");
      out.write("             $.ajax({\r\n");
      out.write("                 url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${APP_PATH}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/emp/\"+del_ids,\r\n");
      out.write("                 type:\"DELETE\",\r\n");
      out.write("                 success:function (result){\r\n");
      out.write("\r\n");
      out.write("                     //跳转到当前页面\r\n");
      out.write("                     topage(current);\r\n");
      out.write("                 }\r\n");
      out.write("\r\n");
      out.write("             })\r\n");
      out.write("         }\r\n");
      out.write("\r\n");
      out.write("     })\r\n");
      out.write("\r\n");
      out.write("    //跳转到指定页面点击\r\n");
      out.write("    $(\"#topagebt\").click(function (){\r\n");
      out.write("\r\n");
      out.write("        var reg=/^\\d{1,10}$/;\r\n");
      out.write("        //要跳转的页码   输入框获取的都是string类型的\r\n");
      out.write("        var pagenum = parseInt($(\"#topagenum\").val());\r\n");
      out.write("        //总页码\r\n");
      out.write("        var pages  =parseInt($(\"#table_info\").attr(\"pages\"));\r\n");
      out.write("        //校验不通过  包括有除数字外的其他字符或者无输入\r\n");
      out.write("        if (!reg.test(($(\"#topagenum\").val()))){\r\n");
      out.write("            alert(\"你输入的页码有误\");\r\n");
      out.write("            $(\"#topagenum\").val(\"\");\r\n");
      out.write("        } else if(pagenum > pages){\r\n");
      out.write("            alert(\"你输入的页码过大,请重新输入\");\r\n");
      out.write("            $(\"#topagenum\").val(\"\");\r\n");
      out.write("        }else {\r\n");
      out.write("            topage(pagenum);\r\n");
      out.write("        }\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    //跳转页面输入框按回车\r\n");
      out.write("    $(\"#topagenum\").keydown(function (event){\r\n");
      out.write("        if(event.keyCode==13){\r\n");
      out.write("            $(\"#topagebt\").click();\r\n");
      out.write("        }\r\n");
      out.write("    })\r\n");
      out.write("/*\r\n");
      out.write("*\r\n");
      out.write("* 待改进的地方  显示前端校验错误信息和后端校验错误信息可以抽取出来一个方法\r\n");
      out.write("* 我把前端后端提示信息写在两个方法里面了\r\n");
      out.write("*\r\n");
      out.write("*\r\n");
      out.write("* 用attr来传递id\r\n");
      out.write("*\r\n");
      out.write("* 后面再再加一个指定的页数\r\n");
      out.write("*\r\n");
      out.write("*\r\n");
      out.write("*\r\n");
      out.write("*\r\n");
      out.write("* */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
